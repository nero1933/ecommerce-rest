name: Django CI

on:
  push:
    branches: [ci-cd]
  pull_request:
    branches: [ci-cd]

jobs:
  test:
    runs-on: ubuntu-latest

    env:
      POSTGRES_DB: dbname
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      SECRET_KEY: 'secret_key'
      DEBUG: '1'
      DB_HOST: db
      DB_NAME: dbname
      DB_USER: user
      DB_PASS: password
      ALLOWED_HOSTS: '127.0.0.1'
      SENDGRID_API_KEY: none
      FROM_EMAIL: none
      USER_CONFIRMATION_KEY: none
      PASSWORD_CONFIRMATION_KEY: none

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Build Docker images
        run: docker compose build

      - name: ls -la
        run: |
          ls -la
          cd ./app
          ls -la

      - name: Create .env
        run:
          echo SECRET_KEY=${{ env.SECRET_KEY }} >> .env
          echo DEBUG=${{ env.DEBUG }} >> .env
          echo DB_HOST=${{ env.DB_HOST }} >> .env
          echo DB_NAME=${{ env.DB_NAME }} >> .env
          echo DB_USER=${{ env.DB_USER }} >> .env
          echo DB_PASS=${{ env.DB_PASS }} >> .env
          echo ALLOWED_HOSTS=${{ env.ALLOWED_HOSTS }} >> .env
          echo SENDGRID_API_KEY=${{ env.SENDGRID_API_KEY }} >> .env
          echo FROM_EMAIL=${{ env.FROM_EMAIL }} >> .env
          echo USER_CONFIRMATION_KEY=${{ env.USER_CONFIRMATION_KEY }} >> .env
          echo PASSWORD_CONFIRMATION_KEY=${{ env.PASSWORD_CONFIRMATION_KEY }} >> .env

      - name: mv
        run: |
          mv .env ./app/.env

      - name: ls -la
        run: |
          ls -la
          cd ./app/app
          ls -la

      - name: Make Migrations & Migrate
        run: |
          docker compose run --rm app sh -c "python manage.py makemigrations ecommerce"
          docker compose run --rm app sh -c "python manage.py migrate"
#
#      - name: Start services
#        run: docker compose up -d
#
#      - name: Check containers
#        run: docker compose ps

      - name: Run tests
        run: docker compose run --rm app sh -c "python manage.py test"
